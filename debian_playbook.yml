---
##################################################################################################
# Ansible playbook built by                                                                      #
#                                                                                                #
# ██╗    ██╗███╗   ███╗██████╗                                                                   #
# ██║    ██║████╗ ████║██╔══██╗                                                                  #
# ██║ █╗ ██║██╔████╔██║██████╔╝                                                                  #
# ██║███╗██║██║╚██╔╝██║██╔══██╗                                                                  #
# ╚███╔███╔╝██║ ╚═╝ ██║██████╔╝                                                                  #
#  ╚══╝╚══╝ ╚═╝     ╚═╝╚═════╝                                                                   #
##################################################################################################

- name: Install dependencies for a new debian machine
  hosts: all
  remote_user: "{{ user }}"
  become: yes

  vars:
    zsh_antigen_bundles_extras:
      - nvm
      - joel-porquet/zsh-dircolors-solarized
    zsh_user: "{{ user }}"
    zsh_autosuggestions_bind_key: "^U"
    vagrant: false

  roles:
    - role: docker
    - role: zsh
    - role: nvim
      user: "{{ user }}"
    - role: slack
      when: headless == 'false'
    - role: vscode
      when: headless == 'false'
    - role: spotify
      when: headless == 'false'
    - role: discord
      when: headless == 'false'
    - role: emacs
      user: "{{ user }}"
      when: headless == 'false'
    - role: nvm
      nvm_version: 'latest'
      nvm_node_version: 'lts'

  tasks:
    - name: generate SSH key
      openssh_keypair:
        path: /home/{{ user }}/.ssh/id_rsa
        owner: "{{ user }}"
        group: "{{ user }}"
      when: ssh_gen == 'true'

    - name: Fix owner of the generated pub key
      file:
        path: /home/{{ user }}/.ssh/id_rsa.pub
        owner: "{{ user }}"
        group: "{{ user }}"
      when: ssh_gen == 'true'

    - name: setup apt repositories
      template:
        src: ./templates/sources.list.j2
        dest: /etc/apt/sources.list

    - name: install amd radeon drivers
      apt:
        name:
          - firmware-amd-graphics
          - libgl1-mesa-dri
          - libglx-mesa0
          - mesa-vulkan-drivers
          - xserver-xorg-video-all
        state: latest
      when: amd_driver == 'true'

    - name: refresh repositories
      apt:
        upgrade: full
        update_cache: true

    - name: update all packages to their latest version
      apt:
        name: "*"
        state: latest

    - name: install dependencies
      apt:
        name:
          - htop
          - vim
          - git
          - make
          - tmux
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - jq
          - httpie
          - zsh
          - terminator
        state: present
        autoclean: yes

    - name: Ensure NTP (for time synchronization)
      apt:
        name:
          - ntp
        state: present
        autoclean: yes
      when: vagrant == 'true'

    - name: Ensure NTP is running
      service: name=ntp state=started enabled=yes
      when: vagrant == 'true'

    - name: setup src user directory
      command:
        argv:
          - mkdir
          - -p
          - /home/{{ user }}/src

    - name: setup oh-my-zsh configs
      template:
        src: ./templates/zshrc.j2
        dest: /home/{{ user }}/.zshrc

    - name: setup tmux configs
      copy:
        src: ./configs/tmux.conf
        dest: /home/{{ user }}/.tmux.conf
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644

    - name: setup ssh dir
      file:
        path: /home/{{ user }}/.ssh
        mode: 0700
        state: directory

    - name: setup ssh configs
      copy:
        src: ~/.ssh/
        dest: /home/{{ user }}/.ssh/
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0600
      when: vagrant == 'false' and ssh_gen == 'false'

    - name: copy ssh keys and config from host to guest
      copy:
        src: /vagrant/ssh/
        dest: /home/{{ user }}/.ssh
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0600
      when: vagrant == 'true' and ssh_gen == 'false'

